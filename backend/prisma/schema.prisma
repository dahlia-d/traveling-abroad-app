generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id         Int        @id @default(autoincrement())
  title      String     @db.VarChar(255)
  createdAt  DateTime   @default(now()) @db.Timestamp(6)
  content    String?
  authorId   Int
  User       User       @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  categories Category[] @relation("PostCategories")
  countries  Country[]  @relation("PostCountries")
}

model Country {
  id    Int    @id @default(autoincrement())
  name  String @unique @db.VarChar(255)
  posts Post[] @relation("PostCountries")
  fromCheckpoints Checkpoint[] @relation("FromCountry")
  toCheckpoints   Checkpoint[] @relation("ToCountry")
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique @db.VarChar(255)
  posts Post[] @relation("PostCategories")
}

model User {
  password      String  @db.VarChar(255)
  id            Int     @id @default(autoincrement())
  refresh_token String? @unique
  username      String  @unique @db.VarChar(255)
  Post          Post[]
}

model Checkpoint {
  id Int @id @default(autoincrement())
  name String @unique @db.VarChar(255)
  fromCountryId Int
  fromCountry Country @relation("FromCountry", fields: [fromCountryId], references: [id])
  toCountryId Int
  toCountry Country @relation("ToCountry", fields: [toCountryId], references: [id])
  latitudeFrom Decimal 
  longitudeFrom Decimal
  latitudeTo Decimal
  longitudeTo Decimal
  checkpointTrafficData CheckpointTrafficData[] @relation("CheckpointTrafficData")
}

model CheckpointTrafficData {
  id Int @id @default(autoincrement())
  checkpointId Int
  checkpoint Checkpoint @relation("CheckpointTrafficData", fields: [checkpointId], references: [id], onDelete: Cascade)
  timestamp DateTime
  durationInTraffic Int
}
